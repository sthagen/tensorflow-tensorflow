diff --git a/shardy/dialect/sdy/ir/parsers.cc b/shardy/dialect/sdy/ir/parsers.cc
index 75d9f9c..746ce09 100644
--- a/shardy/dialect/sdy/ir/parsers.cc
+++ b/shardy/dialect/sdy/ir/parsers.cc
@@ -54,15 +54,21 @@ Attribute MeshAttr::parse(AsmParser& parser, Type type) {
   if (parser.parseLess()) {
     return MeshAttr();
   }
-  if (!parser.parseOptionalKeyword("device_id")) {
+  if (!parser.parseOptionalKeyword("device_ids")) {
     if (parser.parseEqual()) {
       return MeshAttr();
     }
     int64_t deviceId;
-    if (parser.parseInteger(deviceId) || parser.parseGreater()) {
+    if (parser.parseLSquare()) {
+      return MeshAttr();
+    }
+    if (parser.parseInteger(deviceId)) {
       return MeshAttr();
     }
     optDeviceId = deviceId;
+    if (parser.parseRSquare() || parser.parseGreater()) {
+      return MeshAttr();
+    }
   } else if (parser.parseOptionalGreater()) {
     auto parseElementFn = [&]() -> ParseResult {
       if (auto meshAxis = MeshAxisAttr::parse(parser, type)) {
diff --git a/shardy/dialect/sdy/ir/printers.cc b/shardy/dialect/sdy/ir/printers.cc
index 4372304..079e52c 100644
--- a/shardy/dialect/sdy/ir/printers.cc
+++ b/shardy/dialect/sdy/ir/printers.cc
@@ -33,7 +33,7 @@ namespace sdy {
 void MeshAttr::print(AsmPrinter& printer) const {
   printer << "<";
   if (getDeviceId().has_value()) {
-    printer << "device_id=" << *getDeviceId();
+    printer << "device_ids=[" << *getDeviceId() << "]";
   } else {
     llvm::interleaveComma(getAxes(), printer,
                           [&](MeshAxisAttr axis) { axis.print(printer); });
diff --git a/shardy/dialect/sdy/ir/test/mesh_parse_print.mlir b/shardy/dialect/sdy/ir/test/mesh_parse_print.mlir
index 01f62b8..3a99357 100644
--- a/shardy/dialect/sdy/ir/test/mesh_parse_print.mlir
+++ b/shardy/dialect/sdy/ir/test/mesh_parse_print.mlir
@@ -1,7 +1,7 @@
 // RUN: sdy_opt %s 2>&1 | FileCheck %s
 
-// CHECK: sdy.mesh @mesh = <device_id=0>
-sdy.mesh @mesh = <device_id=0>
+// CHECK: sdy.mesh @mesh = <device_ids=[0]>
+sdy.mesh @mesh = <device_ids=[0]>
 
 // CHECK: sdy.mesh @mesh2 = <"a"=2>
 sdy.mesh @mesh2 = <"a"=2>
diff --git a/shardy/dialect/sdy/ir/test/mesh_verification.mlir b/shardy/dialect/sdy/ir/test/mesh_verification.mlir
index ca2f873..c86b985 100644
--- a/shardy/dialect/sdy/ir/test/mesh_verification.mlir
+++ b/shardy/dialect/sdy/ir/test/mesh_verification.mlir
@@ -10,9 +10,9 @@ sdy.mesh @mesh = <"a"=2, "b"=2, "a"=4>
 
 // -----
 // expected-error @+1 {{device id must be non-negative, got: -1}}
-sdy.mesh @mesh = <device_id=-1>
+sdy.mesh @mesh = <device_ids=[-1]>
 
 // -----
 // expected-error @below {{custom op 'sdy.mesh' expected string}}
 // expected-error @below {{custom op 'sdy.mesh' failed to parse Sdy_MeshAxis parameter 'name' which is to be a `::llvm::StringRef`}}
-sdy.mesh @mesh = <"a"=2, "b"=2, device_id=2>
+sdy.mesh @mesh = <"a"=2, "b"=2, device_ids=[2]>
