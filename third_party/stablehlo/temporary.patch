diff --ruN a/stablehlo/stablehlo/conversions/tosa/tests/unary.mlir b/stablehlo/stablehlo/conversions/tosa/tests/unary.mlir
--- stablehlo/stablehlo/conversions/tosa/tests/unary.mlir
+++ stablehlo/stablehlo/conversions/tosa/tests/unary.mlir
@@ -121,8 +121,8 @@
 
 // CHECK-LABEL: @transpose
 func.func @transpose(%arg0: tensor<1x2x3xf32>) -> tensor<3x2x1xf32> {
-  // CHECK-DAG: %[[VAR0:.*]] = "tosa.const"() <{value = dense<[2, 1, 0]> : tensor<3xi64>}> : () -> tensor<3xi64>
-  // CHECK-DAG: %[[VAR1:.*]] = tosa.transpose %arg0, %[[VAR0]]
+  // CHECK: %[[VAR0:.*]] = "tosa.const"() <{value = dense<[2, 1, 0]> : tensor<3xi32>}> : () -> tensor<3xi32>
+  // CHECK: %[[VAR1:.*]] = tosa.transpose %arg0, %[[VAR0]]
   %0 = "stablehlo.transpose"(%arg0) {permutation = array<i64: 2, 1, 0>} : (tensor<1x2x3xf32>) -> tensor<3x2x1xf32>
   return %0 : tensor<3x2x1xf32>
 }
diff --ruN a/stablehlo/stablehlo/conversions/tosa/transforms/StablehloLegalizeToTosa.cpp b/stablehlo/stablehlo/conversions/tosa/transforms/StablehloLegalizeToTosa.cpp
--- stablehlo/stablehlo/conversions/tosa/transforms/StablehloLegalizeToTosa.cpp
+++ stablehlo/stablehlo/conversions/tosa/transforms/StablehloLegalizeToTosa.cpp
@@ -451,9 +451,10 @@
 
     auto perms = op.getPermutation();
     auto type = RankedTensorType::get({static_cast<int64_t>(perms.size())},
-                                      rewriter.getI64Type());
+                                      rewriter.getI32Type());
+    std::vector<int32_t> perms_int32(perms.begin(), perms.end());
     auto constOp = rewriter.create<tosa::ConstOp>(
-        op->getLoc(), type, DenseIntElementsAttr::get(type, perms));
+        op->getLoc(), type, DenseIntElementsAttr::get(type, perms_int32));
     rewriter.replaceOpWithNewOp<tosa::TransposeOp>(op, op.getType(),
                                                    op.getOperand(), constOp);
     return success();
diff --ruN a/stablehlo/stablehlo/dialect/Version.cpp b/stablehlo/stablehlo/dialect/Version.cpp
--- stablehlo/stablehlo/dialect/Version.cpp
+++ stablehlo/stablehlo/dialect/Version.cpp
@@ -82,7 +82,7 @@
     case CompatibilityRequirement::WEEK_4:
       return Version(1, 3, 0);  // v1.3.0 - Jul 15, 2024
     case CompatibilityRequirement::WEEK_12:
-      return Version(1, 0, 0);  // v1.0.0 - May 14, 2024
+      return Version(1, 1, 0);  // v1.1.0 - May 30, 2024
     case CompatibilityRequirement::MAX:
       return Version::getMinimumVersion();
   }

